@model RR.Dto.NewsDto
@{
    ViewData["Title"] = "AddEditNews";
}


<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header card-header-primary">
                    <h4 class="card-title ">News Management </h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("AddEditNews", "News", FormMethod.Post, new { enctype = "multipart/form-data", @id = "submitForm" }))
                    {
                        @Html.AntiForgeryToken();
                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.PicPath)
                        @Html.HiddenFor(x => x.VideoPath)
                        <div class="row">
                            <div class="col-md-6">
                                @if (!string.IsNullOrEmpty(Model.ShowImage))
                                {
                                    <img id="ShowImage" src="@Model.ShowImage" alt="No Image" width="100" height="100" />
                                }
                                else
                                {
                                    <video width="200" height="200" controls src="@Model.ShowVideo">
                                        Your browser does not support the video tag.
                                    </video>
                                }
                                <input style="margin-left:15px;" type="button" onclick="removeImage()" value="Delete" />
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-3">
                                <div class="bmd-label-floating">
                                    <label class="bmd-label-floating">Upload Image</label>
                                    @Html.TextBoxFor(x => x.Image, null, new { @class = "form-control", type = "file", onchange = "document.getElementById('ShowImage').src = window.URL.createObjectURL(this.files[0])" })
                                    @Html.ValidationMessageFor(x => x.Image)
                                </div>


                            </div>
                            <div class="col-md-6">
                                <div class="bmd-label-floating">
                                    <label class="bmd-label-floating">Video Url</label>
                                    @Html.TextBoxFor(x => x.VideoUrl, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.VideoUrl)
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group bmd-form-group is-focused">
                                    <label class="bmd-label-floating">News Date</label>
                                    @Html.TextBoxFor(x => x.NewsDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", @min = DateTime.Now.ToString("yyyy-MM-dd") })
                                    @Html.ValidationMessageFor(x => x.NewsDate)
                                </div>
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-12">
                                <div class="bmd-label-floating">
                                    <label class="bmd-label-floating">News Tag</label>
                                    @Html.TextBoxFor(x => x.NewsTag, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.NewsTag)
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="bmd-label-floating">
                                    <label class="bmd-label-floating">News Title</label>
                                    @Html.TextAreaFor(x => x.Title, new { @class = "form-control", @style = "height:300px!important;" })
                                    @Html.ValidationMessageFor(x => x.Title)
                                </div>
                            </div>

                        </div>


                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>News Content</label>
                                    <div class="form-group bmd-form-group is-focused" id="NewsContent1">
                                        @Html.TextAreaFor(x => x.NewsContent, new { @Id = "NewsContent", @class = "form-control editor" })
                                        @Html.ValidationMessageFor(x => x.NewsContent)
                                    </div>

                                </div>
                            </div>
                        </div>
                        <a href="/news" class="btn btn-primary pull-right">Close</a>
                        if (Model.Id > 0)
                        {
                            <button type="submit" class="btn btn-primary pull-right">Update</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-primary pull-right">Submit</button>
                        }
                        <div class="clearfix"></div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="~/assets/theme/ckeditor/ckeditor.js"></script>

    <script>

         $(document).ready(function () {
            if ('@Model.PicPath' != '') {
                $("#Image").rules("remove", "required")
            }
        })

        CKEDITOR.replace('NewsContent');
        CKEDITOR.config.allowedContent = true;
        $("#submitForm").submit(function (e) {
            //in case, if didn't worked, remove below comment. This will get the textarea with current status
            //CKEDITOR.instances.textarea_input_name.updateElement( );
            var messageLength = CKEDITOR.instances['NewsContent'].getData().replace(/<[^>]*>/gi, '').length;
            if (!messageLength) {
                $("#NewsContent1").append("<span class='field-validation-error' data-valmsg-for='PageContent' data-valmsg-replace='true'><span id='PageContent-error' class=''>News Content is required</span></span>");

                //stop form to get submit
                e.preventDefault();
                return false;
            }
            else {
                $("#NewsContent-error").removeAttr();
                //editor is not empty, proceed to submit the form
                return true;
            }
        });

        function validateForm() {


                var messageLength = CKEDITOR.instances['PageContent'].getData().replace(/<[^>]*>/gi, '').length;
                if (!messageLength) {
                    alert('Please fill required field `Text`');
                    $("[data-valmsg-for=NewsContent]").text("dfsdsf");
                    //stop form to get submit
                    e.preventDefault();
                    return false;
                }
                else {
                    //editor is not empty, proceed to submit the form
                    return true;
                }

        }

        function removeImage() {
            $('#ShowImage').attr("src", "#");
            $('#Image').val(null);
        }

    </script>
}

