@model RR.Dto.ResetPasswordDto
@{
    ViewData["Title"] = "Index";

}

@section styles{
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/dataTables.bootstrap.min.css" rel="stylesheet" />
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header card-header-primary">
                    <h4 class="card-title ">Subadmin List <a href="@Url.Action("CreateSubadmin","Account")" class="btn pull-right"> Add Subadmin </a></h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered" width="100%" id="userDataTable">
                            <thead class=" text-primary">
                                <tr>

                                    <th>Email</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="newPassword" role="dialog">
    <div class="modal-dialog" style="top:20%">

        <!-- Modal content-->
        <div class="modal-content">
            <div id="fpRespone"></div>
            <div id="fpBody">
                <div class="modal-header">
                    <h4>Change Password</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                </div>

                <!-- <div class="modal-header">
                    <span>
                        Change Password
                        <i class="material-icons" data-dismiss="modal">
                            close
                        </i>
                    </span>
                </div>-->
                <div class="modal-body _body">
                    <form id="fpForm" asp-action="ResetPassword" asp-controller="Account" method="POST" data-ajax="true" data-ajax-begin="onBegin" data-ajax-complete="onComplete"
                          data-ajax-failure="onFailed" data-ajax-success="onChangePasswordSuccess" data-ajax-update="fpRespone">
                        <div class="row">
                            <div class="col-md-6">
                                @Html.HiddenFor(x => x.Email)
                                @Html.PasswordFor(x => x.Password, new { @class = "form-control", autocomplete = "off", placeholder = "New Password" })
                                @Html.ValidationMessageFor(x => x.Password)

                            </div>
                        </div><br />
                        <div class="row">
                            <div class="col-md-6">

                                @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", autocomplete = "off", placeholder = "Confirm Password" })
                                @Html.ValidationMessageFor(x => x.ConfirmPassword)


                            </div>
                            </div>
                        <div class="row">
                            <div class="col-md-6">
                            </div>
                            <div class="col-md-6">
                                <button class="btn btn-primary float-right" type="submit">Submit</button>
                            </div>
                        </div>

                        
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>




@section Scripts{
    <script>

        $(function () {
            $('.dataTables_filter input').attr('placeholder', 'Search...').hide();
            var table = $("#userDataTable").DataTable({
                "paging": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "columnDefs": [
                    { "targets": [1], "orderable": false }
                ],
                "ajax": {
                    "url": '@Url.Action("GetUser", "Account")',
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [


                    { "data": "email", "name": "email", "autoWidth": false },
                    {
                        "data": "id", "name": "id", "render": function (value) {
                            return '<a href="@Url.Action("CreateSubadmin", "Account")?id=' + value + '" data-token=' + value + ' rel="tooltip" title="" class="btn btn-primary btn-link btn-sm" data-original-title="Edit Task"><i class="material-icons">edit</i><div class="ripple-container"></div></a> <a onclick="DeleteRecord(this)" data-token=' + value + ' tooltip="Delete" data-original-title="Edit Task"><i class="material-icons">delete_forever</i></a>  <a onclick="GetUserEmail(this)" data-token=' + value + ' tooltip="Delete" data-target="#newPassword" data-toggle="modal"><i class="material-icons">vpn_key</i></a>'
                    }, "autoWidth": true
                    }
                   

                ],
                dom: "Bfrtip",
                 "pageLength": "10"
            });

            $('.search-input').on('keyup change', function () {
                var index = $(this).attr('data-column'),
                    val = $(this).val();
                table.columns(index).search(val.trim()).draw();
            });


        });

        function GetUserEmail(th) {

            var currentRow = $(th).closest('tr').find('td:first').text();
            $('#Email').val(currentRow);
            
        }

        function DeleteRecord(th) {
           
            var id = $(th).attr("data-token")
            swal({
                title: "Are you sure?",
                text: "You Want Delete Of This User!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                          $.ajax({
                    type: "Delete",
                    url: "@Url.Action("DeleteSubadmin", "Account")",
                    data: {id: id },
                    success: function (result) {
                                  console.log(result);
                        if (result != null) {
                              swal("User has been Deleted Successfully", {
                            icon: "success",
                              });
                            setTimeout(function () { window.location.href = "/account" }, 1500);
                        }
                    },
                    error: function () {
                        swal("Something Went Wrong!", {
                            icon: "danger",
                        });
                    }
                });
                    }

                });
        }
        function onChangePasswordSuccess(response) {
           
            if (response == "success") {
                swal("Password Reset Successfully!", {
                    icon: "success",
                });
            } else if (response == "notexits") {
                swal("User Not Exist Please Enter Valid UserId!!!", {
                    icon: "warning",
                });
            } else if (response == "failed") {
                swal("Password not Rested! Try Again", {
                    icon: "warning",
                });
            } else if (response == "error") {
                swal("Something Went Wrong!", {
                    icon: "warning",
                });
            }

            setTimeout(function () { window.location.href = "/account" }, 1500);
        }
        function onComplete(response) {
           
            if (response.responseText == "success") {
                swal("Password Reset Successfully!", {
                    icon: "success",
                });
            } else if (response.responseText == "notexits") {
                swal("User Not Exist Please Enter Valid UserId!!!", {
                    icon: "warning",
                });
            } else if (response.responseText == "failed") {
                swal("Password not Rested! Try Again", {
                    icon: "warning",
                });
            } else if (response.responseText == "error") {
                swal("Something Went Wrong!", {
                    icon: "warning",
                });
            }

            setTimeout(function () { window.location.href = "/account" }, 1500);
        }


    </script>
}

