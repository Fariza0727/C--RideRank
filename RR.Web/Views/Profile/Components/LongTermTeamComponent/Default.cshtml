@using RR.Core;
@using  Newtonsoft.Json;
@model RR.Dto.Team.LongTermTeamFormationDto
@inject RR.Service.IBullRiderPicturesService _picmanager;
@{
    string aspUserid = ViewBag.userId;
}

<div class="longtermteaminfo longTermTeam-info-tab">
    @Html.HiddenFor(r => r.TeamId, new { id = "longtermteamId" })
    @if (Model.TeamId > 0)
    {
        <button class="btn btn-primary" onclick="sendUpdateRequest(this, @Model.TeamId)" type="button">Sent Update Request</button>
        <br /><br />

    }
    else
    {
        <div class="row">

            <div class="form-group col-md-6">
                <label>Team Title/Brand</label><br />
                @Html.TextBoxFor(r => r.TeamBrand, new { @class = "form-control" })
                @Html.ValidationMessageFor(r => r.TeamBrand)
            </div>
            <div class="form-group col-md-6">
                <label>Team Icon</label><br />
                @Html.TextBoxFor(r => r.Icon, new { @type = "file", @class = "input-choose-file" })
                @Html.ValidationMessageFor(r => r.Icon)
            </div>
        </div>

    }


</div>



<div class="tabs-custom tabs-horizontal tabs-modern custom-tab" id="tabs-modern">
    <ul class="nav nav-tabs">
        <li class="nav-item" role="presentation">
            <a class="nav-link custom-nav-link active" href="#riderLTT" data-toggle="tab"> Riders <span class="number-selected">(6)</span></a>
        </li>
        <li class="nav-item" role="presentation"><a class="nav-link custom-nav-link" href="#bullsLTT" data-toggle="tab"> Bull Athletes <span class="number-selected">(3)</span></a></li>
    </ul>

    <div class="tab-content custom-account-pad mt-0">

        <div class="tab-pane fade show active" id="riderLTT">
            <table class="table table-striped table-bordered" width="100%" id="ridersLongTermsDatatable">
                <thead class=" text-primary">
                    <tr>
                        <th style="font-size: 13px;">Tier</th>
                        <th style="font-size: 13px;">Rider</th>
                        <th style="font-size: 13px;">Action</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

        <div class="tab-pane fade" id="bullsLTT">
            <table class="table table-striped table-bordered" width="100%" id="bullsLongTermsDatatable">
                <thead class=" text-primary">
                    <tr>
                        <th style="font-size: 13px;">Tier</th>
                        <th style="font-size: 13px;">Bull</th>
                        <th style="font-size: 13px;">Action</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

    </div>

</div>

@if (Model.TeamId == 0)
{

    <button type="submit" data-teamId="@Model.TeamId" onclick="return createLongTermTeam(this,'@aspUserid')" class="btn btn-primary">Submit</button>

}



<script src="~/js/core.min.js"></script>
<script src="~/js/bootbox.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js"></script>
<script src="~/js/script.js"></script>
<script src="~/js/Team.js"></script>

<script>

    $(function () {

    var ridertable = $("#ridersLongTermsDatatable").DataTable({
        "paging": true,
        "processing": true, // for show progress bar
        "serverSide": true, // for process server side
        "filter": true, // this is for disable filter (search box)
        "orderMulti": false, // for disable multiple column at once
        "ajax": {
            "url": '/GetLongTermTeam/@Model.TeamId',
            "type": "POST",
            "datatype": "json",
            "dataSrc": "data.riderList"
        },
        "columns": [

            {
                data: "riderId", name: "riderId",
                "render": function (data, type, row, meta) {
                    return '<div style="position:relative;" data-tier="' + row.riderTier + '" class="card-standing-position card-standing-counter"><inpu type="hidden" value="' + data + '"/></div>';
                },

            },

            {
                data: "riderName", name: "riderName",
                "render": function (data, type, row, meta) {
                    //<img class="cericle-img" width="46" height="36" src="`+row.riderAvatar+`" onError="this.onerror=null;this.src='/images/RR/New-logo.png'" />
                    return ` <div class="card-standing-team width70">
                                               <div class="card-standing-team-figure">
                                                    <img class="cericle-img" width="46" height="36" src="/images/RR/New-logo.png'" />
                                                </div>
                                                   <div class="card-standing-team-title ">
                                                       <div class="card-standing-team-name"><a href="/rider/detail/`+ row.riderId + `">` + data + `</a></div>
                                                       <div class="card-standing-team-country">Team</div>
                                                   </div>
                                               </div>`;

                },


            },

            {
                data: "isSelected", name: "isSelected",
                "render": function (data, type, row, meta) {
                    var class_ = data==true ? "material-icons-remove" : "material-icons-add";

                    return `<div class="card-standing-button">
                                                <button class="`+ class_+`"
                                                data-tier="`+ row.riderTier + `"
                                                data-riderid="` + row.riderId + `"
                                                onclick="addlongtermRiders(this)" role="button" style="background: #f5f7f9;padding: 10px;border: none;"></button>
                                            </div>`;

                    return data;
                },
            }

        ],
        dom: "Bfrtip",
        "pageLength": 10

    });

    $('.search-input').on('keyup change', function () {
        var index = $(this).attr('data-column'),
            val = $(this).val();
        ridertable.columns(index).search(val.trim()).draw();
    });


    var bulltable = $("#bullsLongTermsDatatable").DataTable({
        "paging": true,
        "processing": true, // for show progress bar
        "serverSide": true, // for process server side
        "filter": true, // this is for disable filter (search box)
        "orderMulti": false, // for disable multiple column at once
        "ajax": {
            "url": '/GetLongTermTeam/@Model.TeamId/true',
            "type": "POST",
            "datatype": "json",
            "dataSrc": "data.bullList"
        },
        "columns": [

            {
                data: "bullId", name: "bullId",
                "render": function (data, type, row, meta) {
                    return '<div style="position:relative;" data-tier="' + row.bullTier + '" class="card-standing-position card-standing-counter"><inpu type="hidden" value="' + data + '"/></div>';
                },

            },

            {
                data: "bullName", name: "bullName",
                "render": function (data, type, row, meta) {
                    //<img class="cericle-img" width="46" height="36" src="`+ row.bullAvatar +`" onError="this.onerror=null;this.src='/images/RR/New-logo.png'" />
                    return ` <div class="card-standing-team width70">
 <div class="card-standing-team-figure">
                                                   <img class="cericle-img" width="46" height="36" src="images/RR/New-logo.png'" />
                                                </div>
                                                        <div class="card-standing-team-title ">
                                                            <div class="card-standing-team-name"><a href="/bull/detail/`+ row.bullId + `">` + data + `</a></div>
                                                            <div class="card-standing-team-country">Team</div>
                                                   </div>
                                               </div>`;

                },


            },

            {
                data: "isSelected", name: "isSelected",
                "render": function (data, type, row, meta) {
                    var class_ = data == true ? "material-icons-remove" : "material-icons-add";
                    return `<div class="card-standing-button">
                                                <button class="`+ class_+`" data-tier="`+ row.bullTier + `" data-bullid="` + row.bullId + `" onclick="addlongtermBulls(this)" role="button" style="background: #f5f7f9;padding: 10px;border: none;"></button>
                                            </div>`;

                    return data;
                },
            }

        ],
        dom: "Bfrtip",
        "pageLength": 10

    });

    $('.search-input').on('keyup change', function () {
        var index = $(this).attr('data-column'),
            val = $(this).val();
        bulltable.columns(index).search(val.trim()).draw();
    });



    });


        $(document).ready(function () {
            var teamCreationArr = [[], [], [], [], [], []];
             var riderList = @Json.Serialize(Model.RiderList);
                for (var i = 0; i < riderList.length; i++) {
                    if (riderList[i].isSelected == true) {
                        if (teamCreationArr[0].length == 2 && teamCreationArr[1].length == 2) {
                            teamCreationArr[2].push(riderList[i]);
                        }
                        else if (teamCreationArr[0].length == 2 && teamCreationArr[1].length < 2) {
                            teamCreationArr[1].push(riderList[i]);
                        }
                        else {
                            teamCreationArr[0].push(riderList[i]);
                        }
                }
            }


            var bullList = @Json.Serialize(Model.BullList);
                for (var i = 0; i < bullList.length; i++) {
                    if (bullList[i].isSelected == true) {
                        if (teamCreationArr[3].length ==1 && teamCreationArr[4].length ==1 && teamCreationArr[5].length == 0) {
                            teamCreationArr[5].push(bullList[i]);
                        }
                        else if (teamCreationArr[3].length ==1 && teamCreationArr[4].length < 1) {
                            teamCreationArr[4].push(bullList[i]);
                        }
                        else {
                            teamCreationArr[3].push(bullList[i]);
                    }
                }
            }
            document.cookie = 'longtermTeam' + "=" + JSON.stringify(teamCreationArr);
            console.log(teamCreationArr);

            $('a[href="#tabs-product-9"]').on('click', function () {
                var isActive = false;
                $('#tabs-product-9 .custom-tab .nav-tabs .custom-nav-link').each(function () {

                    if ($(this).hasClass('active'))
                        isActive = true;

                })
                if (!isActive) {
                    $('#tabs-product-9 .custom-tab .nav-tabs .custom-nav-link').first().trigger('click');
                }

            })

        });

    @if(Model.TeamId > 0)
    {

        /*<text>
    $('a[href="#tabs-product-9"]').html(`<div class="longtermteamInfo longTermTeam-info-tab"><div class="brandIcon">
            <img src="@Url.Content(Model.TeamAvatar)" />
        </div>
        <h3 class="brandTitle">@Model.TeamBrand :: Long Term Team</h3></div>`)*@

    </text>*/
    }
</script>
