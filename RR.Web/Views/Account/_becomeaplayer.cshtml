@model RR.Dto.BecomeAPlayerDto
<link href="~/css/jquery.datetimepicker.min.css" rel="stylesheet" />
<div id="response"></div>
<style>
    .field-validation-error { display: block; }

    .field-validation-valid { display: none; }
</style>
@*Update on 2/1/2020*@
<form id="formRegister" asp-action="PlayerRegister" asp-controller="Account" method="POST" data-ajax="true" data-ajax-update="" data-ajax-begin="onBegin" data-ajax-complete="onComplete"
      data-ajax-failure="onFailed" data-ajax-success="onPlayerRegisterSuccess" enctype="multipart/form-data">

    <div class="row row-10 row-narrow">
        <div class="col-md-6">
            <div class="form-wrap">
                <input type="hidden" id="hdnAccept" name="hdnAccept" value="" />
                @Html.HiddenFor(x => x.PlayerType)
                @Html.HiddenFor(x => x.PlanType)
                @Html.HiddenFor(x => x.StateName)
                @Html.HiddenFor(x => x.CityName)
                @Html.HiddenFor(x => x.PostCode)

                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-input form-control-has-validation form-control-last-child", placeholder = "First Name", autocomplete = "off" })
                @Html.ValidationMessageFor(x => x.FirstName)
            </div>

        </div>
        <div class="col-md-6">
            <div class="form-wrap">
                @Html.TextBoxFor(x => x.SurName, new { @class = "form-input form-control-has-validation form-control-last-child", placeholder = "SurName", autocomplete = "off" })
                @Html.ValidationMessageFor(x => x.SurName)
            </div>

        </div>
        <div class="col-md-6">
            <div class="form-wrap">
                @Html.TextBoxFor(x => x.UserName, new { @class = "form-input form-control-has-validation form-control-last-child", placeholder = "UserName", autocomplete = "off" })
                @Html.ValidationMessageFor(x => x.UserName)

            </div>
        </div>
        <div class="col-md-6">
            <div class="form-wrap">
                @Html.TextBoxFor(x => x.DateOfBirth, new { @type = "date", @class = "form-input form-control-has-validation form-control-last-child", placeholder = "Date of birth", autocomplete = "off", @readonly = "readonly" })
                @Html.ValidationMessageFor(x => x.DateOfBirth)

            </div>
        </div>
        <div class="col-md-6">
            <div class="form-wrap">
                @Html.TextBoxFor(x => x.Email, new { @class = "form-input form-control-has-validation form-control-last-child", @type = "email", placeholder = "Email", autocomplete = "off" })
                @Html.ValidationMessageFor(x => x.Email)

            </div>
        </div>
        <div class="col-md-6">
            <div class="form-wrap">
                @Html.TextBoxFor(x => x.Address1, new { @class = "form-input form-control-has-validation form-control-last-child", placeholder = "Address Line1", autocomplete = "off" })
                @Html.ValidationMessageFor(x => x.Address1)

            </div>
        </div>
        <div class="col-md-6">
            <div class="form-wrap">
                @Html.PasswordFor(x => x.Password, new { @class = "form-input form-control-has-validation form-control-last-child", placeholder = "Password", autocomplete = "off" })
                @Html.ValidationMessageFor(x => x.Password)
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-wrap">
                @Html.TextBoxFor(x => x.Address2, new { @class = "form-input form-control-has-validation form-control-last-child", placeholder = "Address Line2", autocomplete = "off" })
                @*@Html.ValidationMessageFor(x => x.Address2)*@

            </div>
        </div>



        <div class="col-md-6">
            <div class="form-wrap">
                @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-input form-control-has-validation form-control-last-child", placeholder = "Confirm Password", autocomplete = "off" })
                @Html.ValidationMessageFor(x => x.ConfirmPassword)

            </div>
        </div>


        <div class="col-md-6">
            <div class="form-wrap">
                @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-input form-control-has-validation form-control-last-child", placeholder = "Phone Number", autocomplete = "off", onkeypress = "return isNumber(event)" })
                @Html.ValidationMessageFor(x => x.PhoneNumber)
            </div>
        </div>

            <div class="col-md-6">
                <div class="owl-carousel-outer-navigation">
                    <!-- Heading Component-->
                    <article class="heading-component">
                        <div class="heading-component-inner">
                            <h5 class="custom-select-avatar text-transform-none">Select Avatar</h5>
                        </div>
                    </article>
                    <!-- Owl Carousel-->
                    <div class="owl-spacing-1 owl-loaded" data-items="1" data-autoplay="true" data-autoplay-speed="4000" data-dots="false" data-nav="true" data-stage-padding="0" data-loop="false" data-margin="30" data-mouse-drag="false" data-nav-custom=".owl-carousel-outer-navigation">
                        <div class="owl-stage-outer">
                            <div class="owl-stage">
                                <div class="owl-item cloned" style="width: 495px; margin-right: 30px;">
                                    <article class="custom-avatar">
                                        <figure class="text-center">
                                            <img class="avatar-img" src="/images/RR/user-n.png" id="ShowImage" src="" alt="No Image" width="91" height="91" />
                                            <i class="fa fa-camera upload-button"></i>
                                            <input class="file-upload" name="file" id="file" type="file" accept="image/*" onchange="document.getElementById('ShowImage').src = window.URL.createObjectURL(this.files[0])">
                                        </figure>
                                    </article>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-3">
                        <p><b>State</b></p>
                        <label id="lblState"></label>
                    </div>
                    <div class="col-md-3">
                        <p><b>City</b></p>
                        <label id="lblCity"></label>
                    </div>
                    <div class="col-md-3">
                        <p><b>ZipCode</b></p>
                        <label id="lblZipCode"></label>
                    </div>
                    <div class="col-md-3">
                        <p><b>Cowboy Coins</b></p>
                        <label id="lblToken">@ViewBag.Token</label>
                    </div>
                </div>
            </div>

        @*<div class="col-md-6">
                <div class="form-wrap">
                    @Html.TextBoxFor(x => x.Address3, new { @class = "form-input form-control-has-validation form-control-last-child", placeholder = "Address Line3", autocomplete = "off" })
                </div>
            </div>*@
        <div class="card-form card-form-login pad5">
            <div class="row">

                @*<div class="col-md-6">
                        <div class="form-wrap">
                            <label class="checkbox-inline checkbox-inline-lg checkbox-light">
                                @Html.CheckBoxFor(x => x.TermOfUse, new { @class = "checkbox-custom" })
                                <a href="/Page/terms-of-use">Terms of Use</a>
                            </label>
                            @Html.ValidationMessageFor(x => x.TermOfUse)
                        </div>
                    </div>*@
            </div>
            @*<button class="button button-primary mt-20 float-right" type="button" onclick="return loadMakePaymentTab()" aria-label="Send" data-target="#pwdModal" data-toggle="modal">Next</button>*@

            <button class="button button-primary mt-20 float-right" type="submit">Submit</button>
            <button class="button button-primary mt-20 float-lleft mt-40" onclick="ShowPlayerType(this)" type="button" aria-label="Send">Previous</button>
        </div>
    </div>
</form>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog" style="top:20%">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" style="float:left">Player Detail</h4>
                <span style="float:right">
                    <i class="material-icons" data-dismiss="modal">
                        close
                    </i>
                </span>
            </div>
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>
<!-- END MODAL -->
